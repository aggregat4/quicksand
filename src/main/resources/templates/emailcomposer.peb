<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>E-Mail Composer - Quicksand</title>
    <link rel="stylesheet" href="/css/base.css">
    <link rel="stylesheet" href="/css/emailcomposer.css">
</head>
<body class="email-composer">
    {% import "templates/macros.peb" %}
    <main>
        <form id="save-email-form" method="POST" action="/emails/{{ emailId }}">
            <label for="email-to">To:</label>
            <input id="email-to" type="text" name="email-to">

            <label for="email-cc">CC:</label>
            <input id="email-cc" type="text" name="email-cc">

            <label for="email-bcc">BCC:</label>
            <input id="email-bcc" type="text" name="email-bcc">

            <label for="email-subject">Subject:</label>
            <input id="email-subject" type="text" name="email-subject">

            <div id="body-with-attachments">
                {# This is the simplest way I could find for making a text area grow in vertical size so that it
                   does not become a scrollable rectangle. We want this because we want the attachments to hang to the
                   bottom of the body of the email and not take up vertical space in the editor itself.
                   See https://css-tricks.com/the-cleanest-trick-for-autogrowing-textareas/
                   #}
                <div id="email-body-grow-wrap" class="grow-wrap">
                    <textarea
                            id="email-body"
                            aria-label="Email Body"
                            onInput="this.parentNode.dataset.replicatedValue = this.value"></textarea>
                </div>

                <div id="attachments">
                    <input class="email-attachment-input" type="file" name="email-attachment">
                </div>
            </div>

            <div id="email-toolbar">
                {{ submitButton(true, 'send', false, 'email-action-send', 'Send Email') }}
                {{ submitButton(true, 'delete', false, 'email-action-delete', 'Delete Draft') }}
            </div>
        </form>
    </main>
    <script src="/js/messagecomposer.js"></script>
</body>
</html>
