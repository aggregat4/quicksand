.email-composer main {
    height: 100%;
}

#save-email-form {
    width: 100%;
    height: 100%;

    display: grid;
    gap: 6px;
    grid-template-columns: min-content 1fr;
    grid-template-rows: min-content min-content min-content min-content 4fr min-content;
}

#body-with-attachments {
    grid-column: 1 / 3;
    grid-row: 5 / 6;

    resize: none;
    overflow-y: scroll;

    display: flex;
    flex-direction: column;
    gap: 6px;
}

#email-body-grow-wrap {
    flex-grow: 1;
}

/*
  Auto growing textarea as prototyped by
  https://css-tricks.com/the-cleanest-trick-for-autogrowing-textareas/
 */
.grow-wrap {
    /* easy way to plop the elements on top of each other and have them both sized based on the tallest one's height */
    display: grid;
}

.grow-wrap::after {
    /* Note the weird space! Needed to preventy jumpy behavior */
    content: attr(data-replicated-value) " ";
    /* This is how textarea text behaves */
    white-space: pre-wrap;
    /* Hidden from view, clicks, and screen readers */
    visibility: hidden;
}

.grow-wrap > textarea {
    /* You could leave this, but after a user resizes, then it ruins the auto sizing */
    resize: none;
    /* Firefox shows scrollbar on growth, you can hide like this. */
    overflow: hidden;
}

.grow-wrap > textarea,
.grow-wrap::after {
    /* Identical styling required!! */
    border: 1px solid lightgray;
    padding: 0.5rem;
    font: inherit;
    /* Place on top of each other */
    grid-area: 1 / 1 / 2 / 2;
}


#email-body {
    width: 100%;
}

#email-toolbar {
    grid-column: 1 / 3;
    grid-row: 6 / 7;

    display: flex;
    flex-direction: row;
    column-gap: 6px;
    flex-flow: row-reverse;
}

.email-attachment-input {
    display: none;
}
